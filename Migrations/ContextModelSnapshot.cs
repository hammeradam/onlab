// <auto-generated />
using alulaTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace alulaTest.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("alulaTest.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Budget");

                    b.Property<string>("Company");

                    b.Property<int>("CurrentHours");

                    b.Property<string>("DueDate");

                    b.Property<string>("Leader");

                    b.Property<string>("Name");

                    b.Property<int>("PlannedHours");

                    b.Property<int?>("ResourcesId");

                    b.Property<int>("Risk");

                    b.Property<int?>("SkillsId");

                    b.Property<string>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("ResourcesId");

                    b.HasIndex("SkillsId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("alulaTest.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Occupacity");

                    b.Property<int>("PhoneNumber");

                    b.Property<int>("Salary");

                    b.Property<string>("Skills");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("alulaTest.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<string>("Name");

                    b.Property<int?>("WeekId");

                    b.HasKey("Id");

                    b.HasIndex("WeekId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("alulaTest.Models.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Current");

                    b.Property<int>("Requiered");

                    b.Property<int?>("YearId");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Week");
                });

            modelBuilder.Entity("alulaTest.Models.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProjectId");

                    b.Property<int?>("ResourceId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Year");
                });

            modelBuilder.Entity("alulaTest.Models.Project", b =>
                {
                    b.HasOne("alulaTest.Models.Resource", "Resources")
                        .WithMany()
                        .HasForeignKey("ResourcesId");

                    b.HasOne("alulaTest.Models.Skill", "Skills")
                        .WithMany()
                        .HasForeignKey("SkillsId");
                });

            modelBuilder.Entity("alulaTest.Models.Skill", b =>
                {
                    b.HasOne("alulaTest.Models.Week")
                        .WithMany("Name")
                        .HasForeignKey("WeekId");
                });

            modelBuilder.Entity("alulaTest.Models.Week", b =>
                {
                    b.HasOne("alulaTest.Models.Year")
                        .WithMany("Weeks")
                        .HasForeignKey("YearId");
                });

            modelBuilder.Entity("alulaTest.Models.Year", b =>
                {
                    b.HasOne("alulaTest.Models.Project")
                        .WithMany("Calendar")
                        .HasForeignKey("ProjectId");

                    b.HasOne("alulaTest.Models.Resource")
                        .WithMany("Calendar")
                        .HasForeignKey("ResourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
